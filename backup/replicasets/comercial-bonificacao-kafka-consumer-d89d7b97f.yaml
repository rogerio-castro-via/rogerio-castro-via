apiVersion: apps/v1
kind: ReplicaSet
metadata:
  annotations:
    deployment.kubernetes.io/desired-replicas: "1"
    deployment.kubernetes.io/max-replicas: "2"
    deployment.kubernetes.io/revision: "28"
    deployment.kubernetes.io/revision-history: "25"
  labels:
    app: comercial-bonificacao-kafka-consumer
    deploymentconfig: comercial-bonificacao-kafka-consumer
    pod-template-hash: d89d7b97f
  name: comercial-bonificacao-kafka-consumer-d89d7b97f
  namespace: bonificacao-prd
spec:
  replicas: 0
  selector:
    matchLabels:
      app: comercial-bonificacao-kafka-consumer
      pod-template-hash: d89d7b97f
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: comercial-bonificacao-kafka-consumer
        deploymentconfig: comercial-bonificacao-kafka-consumer
        pod-template-hash: d89d7b97f
    spec:
      containers:
      - env:
        - name: DATASOURCE_URL
          valueFrom:
            secretKeyRef:
              key: DATASOURCE_URL
              name: postgres-bonificacao
        - name: DATASOURCE_USERNAME
          valueFrom:
            secretKeyRef:
              key: DATASOURCE_USERNAME
              name: postgres-bonificacao
        - name: DATASOURCE_PASSWORD
          valueFrom:
            secretKeyRef:
              key: DATASOURCE_PASSWORD
              name: postgres-bonificacao
        - name: LN_DATASOURCE_URL
          valueFrom:
            secretKeyRef:
              key: LN_DATASOURCE_URL
              name: ln-bonificacao
        - name: LN_DATASOURCE_USERNAME
          valueFrom:
            secretKeyRef:
              key: LN_DATASOURCE_USERNAME
              name: ln-bonificacao
        - name: LN_DATASOURCE_PASSWORD
          valueFrom:
            secretKeyRef:
              key: LN_DATASOURCE_PASSWORD
              name: ln-bonificacao
        - name: LN_DATASOURCE_DRIVER_CLASS_NAME
          valueFrom:
            secretKeyRef:
              key: LN_DATASOURCE_DRIVER_CLASS_NAME
              name: ln-bonificacao
        - name: LN_TEST_WHILE_IDLE
          valueFrom:
            secretKeyRef:
              key: LN_TEST_WHILE_IDLE
              name: ln-bonificacao
        - name: LN_VALIDATION_QUERY
          valueFrom:
            secretKeyRef:
              key: LN_VALIDATION_QUERY
              name: ln-bonificacao
        - name: SERVICENOW_URL
          valueFrom:
            secretKeyRef:
              key: SERVICENOW_URL
              name: servicenow-api-bonificacao
        - name: SERVICENOW_USER
          valueFrom:
            secretKeyRef:
              key: SERVICENOW_USER
              name: servicenow-api-bonificacao
        - name: SERVICENOW_PASSWORD
          valueFrom:
            secretKeyRef:
              key: SERVICENOW_PASSWORD
              name: servicenow-api-bonificacao
        envFrom:
        - configMapRef:
            name: comercial-bonificacao-kafka-consumer-6g8gm5mkg5
        image: harbor01.viavarejo.com.br/bonificacao/bonificacao-prd/comercial-bonificacao-kafka-consumer:1.0.0-16
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /actuator/health
            port: 8090
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 60
          successThreshold: 1
          timeoutSeconds: 5
        name: comercial-bonificacao-kafka-consumer
        ports:
        - containerPort: 8080
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /actuator/health
            port: 8090
            scheme: HTTP
          initialDelaySeconds: 180
          periodSeconds: 60
          successThreshold: 3
          timeoutSeconds: 5
        resources:
          limits:
            cpu: 500m
            memory: 2Gi
          requests:
            cpu: 300m
            memory: 768Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      nodeSelector:
        agentpool: boniapp
        app: bonoapp
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
